{"version":3,"sources":["logo.svg","Coin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Coin","key","name","image","symbol","volume","price","rank","priceChange","className","src","alt","App","useState","coins","setCoins","Search","setSearch","useEffect","axios","get","then","res","data","filteredCoins","filter","coin","toLowerCase","includes","onChange","event","target","value","console","log","map","market_cap","current_price","market_cap_rank","price_change_percentage_24h","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAe,I,+DCwCAA,EApCF,SAAC,GACd,EADeC,IACd,IADkBC,EACnB,EADmBA,KAAKC,EACxB,EADwBA,MAAMC,EAC9B,EAD8BA,OAAOC,EACrC,EADqCA,OAAOC,EAC5C,EAD4CA,MAAMC,EAClD,EADkDA,KAAKC,EACvD,EADuDA,YAEnD,OACA,sBAAKC,UAAU,OAAf,UACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,WAAf,SACA,qBAAKC,IAAKP,EAAOQ,IAAI,OAErB,qBAAKF,UAAU,UAAf,SACC,6BAAKP,MAEL,qBAAKO,UAAU,UAAf,SACA,6BAAKL,SAKV,sBAAKK,UAAU,QAAf,UACI,6BAAKH,IACT,6BAAKD,IACL,6BAAKE,IAEDC,EAAY,EAEhB,qBAAIC,UAAU,QAAd,UAAsB,cAAC,IAAD,IAAkBD,EAAxC,OAGQ,qBAAIC,UAAU,MAAd,UAAoB,cAAC,IAAD,IAAoBD,EAAxC,cC+DDI,MAxFf,WAGG,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAcC,EAAd,KAEDC,qBACE,WAGEC,IAAMC,IAAI,4HAA4HC,MACpI,SAACC,GAECP,EAASO,EAAIC,WAMnB,IAGF,IAMMC,EAAgBV,EAAMW,QAAO,SAACC,GAElC,OAAOA,EAAKxB,KAAKyB,cAAcC,SAASZ,EAAOW,kBAKjD,OAGE,sBAAKlB,UAAU,iBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,iDACA,uBAAOoB,SAnBA,SAACC,GAEZb,EAAUa,EAAMC,OAAOC,OACvBC,QAAQC,IAAIlB,SAmBV,qBAAKP,UAAU,cAAf,SAgBEe,EAAcW,KAAI,SAACT,GAGjB,OADAO,QAAQC,IAAIR,GAIV,cAAC,EAAD,CACMxB,KAAMwB,EAAKxB,KACXC,MAAOuB,EAAKvB,MACZC,OAAQsB,EAAKtB,OACbC,OAAQqB,EAAKU,WACb9B,MAAOoB,EAAKW,cACZ9B,KAAOmB,EAAKY,gBACZ9B,YAAekB,EAAKa,6BAPfb,EAAKc,aC5DbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.66a974d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\r\n\r\nconst Coin = ({key,name,image,symbol,volume,price,rank,priceChange})=>\r\n{\r\n    return(\r\n    <div className=\"coin\">\r\n        <div className=\"image\">\r\n            <div className=\"content2\">\r\n            <img src={image} alt=\"\"/>\r\n            </div>\r\n            <div className=\"content\">\r\n             <h4>{name}</h4>\r\n             </div>\r\n             <div className=\"content\">\r\n             <h4>{symbol}</h4>\r\n             </div>\r\n        </div>\r\n        \r\n        \r\n        <div className=\"price\">\r\n            <h4>{price}</h4>\r\n        <h4>{volume}</h4>\r\n        <h4>{rank}</h4>\r\n        {\r\n            priceChange>0?(\r\n\r\n        <h4 className=\"green\"><TrendingUpIcon/>{priceChange}%</h4>\r\n            ):\r\n            (\r\n                <h4 className=\"red\"><TrendingDownIcon/>{priceChange}%</h4>\r\n            )           \r\n}\r\n        </div>\r\n    </div> \r\n\r\n    )\r\n}\r\n\r\nexport default Coin;","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Coin from './Coin';\n\nfunction App() {\n\n  \n   const [coins,setCoins] = useState([]);\n   const [Search,setSearch] = useState('');\n   \n  useEffect(\n    ()=>\n    {\n     \n      axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false\").then(\n        (res)=>\n        {\n          setCoins(res.data)\n          \n        }\n      )\n    },\n\n    []\n\n  );\n  const change=(event)=>\n  {\n    setSearch(event.target.value);\n    console.log(Search)\n  }\n\n  const filteredCoins = coins.filter((coin)=>\n  {\n    return coin.name.toLowerCase().includes(Search.toLowerCase())\n  })\n  \n  \n  \n  return (\n   \n    \n    <div className=\"coin_container\">\n      <div className=\"search\">\n        <h2> Search Cryptos</h2>\n        <input onChange={change}>\n        </input>        \n      </div>\n      <div className=\"display_div\">\n   \n     \n      \n      \n      \n      \n      \n       {\n        \n\n\n      \n\n          \n \n        filteredCoins.map((coin)=>\n        {\n          console.log(coin)\n          return(\n           \n         \n            <Coin key={coin.id}\n                  name={coin.name}\n                  image={coin.image}\n                  symbol={coin.symbol}\n                  volume={coin.market_cap}\n                  price={coin.current_price}\n                  rank ={coin.market_cap_rank}\n                  priceChange = {coin.price_change_percentage_24h}\n                  \n                  />\n         \n          )\n        }\n         )\n      \n      }\n      </div>\n    </div>\n    \n );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}